name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      create_release:
        description: 'Create a GitHub release from the latest tag'
        required: true
        type: boolean
        default: false

jobs:
  build:
    name: Build for ${{ matrix.os }} (${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: nexus-network-linux-x86_64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: nexus-network-linux-arm64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: nexus-network-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: nexus-network-macos-arm64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: nexus-network-windows-x86_64.exe

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Verify toolchain
        run: |
          echo "Rust version: $(rustc --version)"
          echo "Cargo version: $(cargo --version)"
          echo "Target: $(rustc --print target)"
          echo "Host: $(rustc --print host)"

      - name: Build
        working-directory: clients/cli
        run: cargo build --release
        env:
          RUSTFLAGS: "-C target-feature=+crt-static"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: clients/cli/target/release/nexus-network${{ matrix.os == 'windows-latest' && '.exe' || '' }}

  release:
    name: Create Release
    needs: build
    if: github.event.inputs.create_release == 'true' || github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/nexus-network-linux-x86_64
            artifacts/nexus-network-linux-arm64
            artifacts/nexus-network-macos-x86_64
            artifacts/nexus-network-macos-arm64
            artifacts/nexus-network-windows-x86_64.exe
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 